{
	"info": {
		"_postman_id": "31e09607-1906-4efd-b2a0-24a388a7f688",
		"name": "FSND - Final Project - Casting Agency",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Casting Assistant",
			"item": [
				{
					"name": "Retrieve Actors List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing get:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['get:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing post:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['post:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Ryan Reynolds\",\r\n    \"age\": 44,\r\n    \"gender\": \"Male\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing get:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['get:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing patch:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['patch:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Leonardo DiCaprio\",\r\n    \"age\": 46,\r\n    \"gender\": \"Male\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing delete:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['delete:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Movie List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing get:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['get:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing post:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['post:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Black Box\",\r\n    \"release_year\": 2020\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing get:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['get:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing patch:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['patch:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"release_year\": 2020\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing delete:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['delete:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"/*",
							"    Casting Assistant Folder",
							"",
							"    Set JWT token to Casting Assistant Token",
							"    and set permissions status code dictionary to permissions available for this role",
							"*/",
							"pm.collectionVariables.set(\"current_role\", \"Casting Assitant Role\");",
							"",
							"var current_token = pm.collectionVariables.get(\"casting_assistant_token\");",
							"pm.collectionVariables.set(\"current_token\", current_token);",
							"",
							"var permissions_status_codes_dictionary = {",
							"    \"get:actors\":       200,",
							"    \"post:actors\":      403, // Forbidden",
							"    \"patch:actors\":     403, // Forbidden",
							"    \"delete:actors\":    403, // Forbidden",
							"    \"get:movies\":       200,",
							"    \"post:movies\":      403, // Forbidden",
							"    \"patch:movies\":     403, // Forbidden",
							"    \"delete:movies\":    403  // Forbidden",
							"}",
							"",
							"pm.collectionVariables.set(\"permissions_status_codes_dictionary\", permissions_status_codes_dictionary);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Casting Director",
			"item": [
				{
					"name": "Retrieve Actors List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing get:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['get:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing post:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['post:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Ryan Reynolds\",\r\n    \"age\": 44,\r\n    \"gender\": \"Male\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing get:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['get:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing patch:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['patch:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Leonardo DiCaprio\",\r\n    \"age\": 46,\r\n    \"gender\": \"Male\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing delete:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['delete:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Movie List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing get:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['get:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing post:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['post:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Black Box\",\r\n    \"release_year\": 2020\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing get:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['get:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing patch:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['patch:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"release_year\": 2020\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing delete:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['delete:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"/*",
							"    Casting Director Folder",
							"",
							"    Set JWT token to Casting Director Token",
							"    and set permissions status code dictionary to permissions available for this role",
							"*/",
							"pm.collectionVariables.set(\"current_role\", \"Casting Director Role\");",
							"",
							"var current_token = pm.collectionVariables.get(\"casting_director_token\");",
							"pm.collectionVariables.set(\"current_token\", current_token);",
							"",
							"var permissions_status_codes_dictionary = {",
							"    \"get:actors\":       200,",
							"    \"post:actors\":      200,",
							"    \"patch:actors\":     200,",
							"    \"delete:actors\":    200,",
							"    \"get:movies\":       200,",
							"    \"post:movies\":      403, // Forbidden",
							"    \"patch:movies\":     200,",
							"    \"delete:movies\":    403  // Forbidden",
							"}",
							"",
							"pm.collectionVariables.set(\"permissions_status_codes_dictionary\", permissions_status_codes_dictionary);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Executive Producer",
			"item": [
				{
					"name": "Retrieve Actors List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing get:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['get:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing post:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['post:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Ryan Reynolds\",\r\n    \"age\": 44,\r\n    \"gender\": \"Male\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing get:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['get:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing patch:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['patch:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Leonardo DiCaprio\",\r\n    \"age\": 46,\r\n    \"gender\": \"Male\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing delete:actors\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['delete:actors']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Movie List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing get:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['get:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing post:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['post:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Black Box\",\r\n    \"release_year\": 2020\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing get:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['get:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing patch:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['patch:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"release_year\": 2020\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"    Testing delete:movies\r",
									"    Please refer to the Pre-request Script for the Folder containing this request action\r",
									"*/\r",
									"\r",
									"var current_role = pm.collectionVariables.get(\"current_role\");\r",
									"\r",
									"var permissions_status_codes_dictionary = pm.collectionVariables.get(\"permissions_status_codes_dictionary\");\r",
									"\r",
									"var status_code = permissions_status_codes_dictionary['delete:movies']\r",
									"\r",
									"pm.test(current_role + \" - Test Status Code is \" + status_code, function () {\r",
									"    pm.response.to.have.status(status_code);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{current_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"/*",
							"    Executive Producer Folder",
							"",
							"    Set JWT token to Executive Producer Token",
							"    and set permissions status code dictionary to permissions available for this role",
							"*/",
							"pm.collectionVariables.set(\"current_role\", \"Executive Producer Role\");",
							"",
							"var current_token = pm.collectionVariables.get(\"executive_producer_token\");",
							"pm.collectionVariables.set(\"current_token\", current_token);",
							"",
							"var permissions_status_codes_dictionary = {",
							"    \"get:actors\":       200,",
							"    \"post:actors\":      200,",
							"    \"patch:actors\":     200,",
							"    \"delete:actors\":    200,",
							"    \"get:movies\":       200,",
							"    \"post:movies\":      200,",
							"    \"patch:movies\":     200,",
							"    \"delete:movies\":    200",
							"}",
							"",
							"pm.collectionVariables.set(\"permissions_status_codes_dictionary\", permissions_status_codes_dictionary);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "https://omar-fsnd-casting-agency.herokuapp.com/"
		},
		{
			"key": "casting_assistant_token",
			"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImJfc21vM05KTnpsVkRMelo3clRsSyJ9.eyJpc3MiOiJodHRwczovL29tYXItZnNuZC51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjBmMDk2ZDFlMTlhZDQwMDcwZmM1ODFjIiwiYXVkIjoiY2FzdGluZy1hZ2VuY3kiLCJpYXQiOjE2MzI5NDg3NjcsImV4cCI6MTYzNTU0MDc2NywiYXpwIjoiZll2b2hkSmJydWZnQXNvdG9tajBHN2hjdW9zOGY3RksiLCJwZXJtaXNzaW9ucyI6WyJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyJdfQ.jjyqiHxB3YgLHxmoUsaUCn74KYHayqJchSHTrE6yL3ZUCbnFQQ_QP2URKWoPa8HQZQRa6d1mUsOshL_ZXsR4BqTjzme_PnKb-32NMBHkkliHpJP2lrGAfjlVAfvXYwnsMdEJ4hxltPVKsnWrz17RjtOvADvzTcJ2kIGE8CVW4kF76sB9fQcw6YUWRyoT9YGToCSG0EnBzA5mlqRzRYkp-XbNGsD6TDtRPWcoXVXM9lgLM00makIRM2Ng6lTRZpwTn32OGFWjf_C7LJguRrB2b40nsRWrP00QKV5CIAbRVjUkk0mmeYSogmaPB_3QxV_WeLK16Rh0hH_ZkRiWehBPTg"
		},
		{
			"key": "casting_director_token",
			"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImJfc21vM05KTnpsVkRMelo3clRsSyJ9.eyJpc3MiOiJodHRwczovL29tYXItZnNuZC51cy5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMTcxMzQxMzQwMjQ0NDE1NDA3NDUiLCJhdWQiOiJjYXN0aW5nLWFnZW5jeSIsImlhdCI6MTYzMjk0OTA0MywiZXhwIjoxNjM1NTQxMDQzLCJhenAiOiJmWXZvaGRKYnJ1ZmdBc290b21qMEc3aGN1b3M4ZjdGSyIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvcnMiLCJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyIsInBhdGNoOmFjdG9ycyIsInBhdGNoOm1vdmllcyIsInBvc3Q6YWN0b3JzIl19.WGfjKefcEW9Hpb8-qiyQW9UT9u9Ylu7Vsk7UI8CzcZEB4XIPh2XK6NOeohl0UR6cpzrVNOBMi040jpUvpLV7naAHYKuEqGqi0ZCy5wvdCnw5ZEmGaj9Dfwkatrh1V8gltk4UAFWqY0Mm1HR4CA5zSC7KGfF45KIWoJ-M2KUhWxUaDFubut1W55wbOrnaPSd4bEdIThZJh8BlGU6HQGSHqsa8aSva7CaDNERkY_0LtsIbl2epx26fahnQtUXRCkOI2IJADjhMcRj-aRCzH_Z7t-N4_hGbiOlsNXrvhWs_8T-OvnnA4BgX5xyTui63eZrsWbwfGVifd5MyZIxqb1NsNg"
		},
		{
			"key": "executive_producer_token",
			"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImJfc21vM05KTnpsVkRMelo3clRsSyJ9.eyJpc3MiOiJodHRwczovL29tYXItZnNuZC51cy5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMDkyMDE4OTQyOTYxMTI1MTkzODIiLCJhdWQiOiJjYXN0aW5nLWFnZW5jeSIsImlhdCI6MTYzMjk0OTEyNSwiZXhwIjoxNjM1NTQxMTI1LCJhenAiOiJmWXZvaGRKYnJ1ZmdBc290b21qMEc3aGN1b3M4ZjdGSyIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphY3RvcnMiLCJkZWxldGU6bW92aWVzIiwiZ2V0OmFjdG9ycyIsImdldDptb3ZpZXMiLCJwYXRjaDphY3RvcnMiLCJwYXRjaDptb3ZpZXMiLCJwb3N0OmFjdG9ycyIsInBvc3Q6bW92aWVzIl19.Ia0MlLzpiRbQO3iPORmstmuNafIQI3bPMNx1nD9yjMC94jkNhUOFFuaV4DCOHceKjWR_XUdu5tYR2Byq7eD_1eSuMpsSP3rpMBuvbIBj2BkpKzpH17SSie0fQ2LEYV5ilU4pWjPDhx-IEyk9r2Bd1vYudhIUhou2DUSiAMF-DsclRi9qaJSxWtPK5EcCe0mfP3xYM6_0oIRvR6vpDEhrBT009gEugeXMvMMZnuDTTojRxbSVJ-S_S7VMcPXQZMWsJHqtLsc8n8MdUMLWn8Fo8BahvgjGMbHUOK_sQSpJvdl6Zkt1VpExdazjmDbDmN5u_lmpz3ViK9CKCHllKBig3A"
		},
		{
			"key": "current_token",
			"value": "the current token is set by folder pre-request script"
		},
		{
			"key": "permissions_status_codes_dictionary",
			"value": "the dictionary is set by folder pre-request script"
		},
		{
			"key": "current_role",
			"value": "the current role is set by folder pre-request script"
		}
	]
}